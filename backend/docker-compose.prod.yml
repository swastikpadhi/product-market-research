version: '3.8'

services:
  # FastAPI backend (API only)
  api:
    image: ghcr.io/${GITHUB_OWNER}/${GHCR_REPOSITORY}:latest
    container_name: research_api_prod
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers 4
    ports:
      - "8000:8000"
    environment:
      # API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      
      # Databases (all on cloud)
      - MONGODB_URL=${MONGODB_URL}
      - POSTGRES_URL=${POSTGRES_URL}
      - REDIS_URL=${REDIS_URL}
      
      # App config
      - PORT=8000
      - ENVIRONMENT=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery worker (background tasks)
  worker:
    image: ghcr.io/${GITHUB_OWNER}/${GHCR_REPOSITORY}:latest
    container_name: research_worker_prod
    command: celery -A app.worker.celery_app worker --loglevel=info --concurrency=4
    environment:
      # API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      
      # Databases (all on cloud)
      - MONGODB_URL=${MONGODB_URL}
      - POSTGRES_URL=${POSTGRES_URL}
      - REDIS_URL=${REDIS_URL}
      
      # Celery config
      - C_FORCE_ROOT=true  # Allow running as root (Docker container)
    restart: unless-stopped
    depends_on:
      - api

  # Nginx reverse proxy (API only)
  nginx:
    image: nginx:alpine
    container_name: research_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped

  # Optional: Flower (Celery monitoring dashboard)
  flower:
    image: ghcr.io/${GITHUB_OWNER}/${GHCR_REPOSITORY}:latest
    container_name: research_flower_prod
    command: celery -A app.worker.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - POSTGRES_URL=${POSTGRES_URL}
      - REDIS_URL=${REDIS_URL}
    restart: unless-stopped
    profiles:
      - monitoring

networks:
  default:
    name: research_network_prod
